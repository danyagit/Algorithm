newcoder:
63. 股票的最大利润:可以有一次买入和一次卖出，买入必须在前。求最大收益。
此题遍历一次数组就可以
将第一个元素作为curMin的初始值，max最小初始化。从第二个元素开始遍历。在遍历每个元素的时候要做两件事情：
1、将当前元素与curMin作差，与max比较，如果利益>max,就赋给max
2、将当前元素与curMin比较，如果<curMin,就赋给curMin

leetcode:
1. 分配饼干
Input: grid[1,3], size[1,2,4]
Output: 2
分别排序,easy
2. 不重叠的区间个数：计算让一组区间不重叠所需要移除的区间个数。
思想：移除对别的区间干扰大的区间
首先对该二维数组中的区间进行排序（按x升序），遍历比较（指针每次移动一位）相邻两个区间(a,b)(c,d)是否重叠。分两种情况
c>=b跳过
c<b&&d>=b需要删除后一个区间
c<b&&d<b需要删除前一个区间
3. 投飞镖刺破气球
也是计算不重叠的区间个数，区别在于，[1, 2] 和 [2, 3] 在本题中算是重叠区间。
4. 根据身高和序号重组队列
此题属于脑经急转弯，用到了list.add(object,index),新的index如果和前面一样，会挤到前面。记住做法：
先按照身高降序，k值升序排列二维数组。再list.add(二维数组元素,元素中的k)。
6. 买卖股票的最大收益 II：可以进行多次交易，多次交易之间不能交叉进行，可以进行多次交易。
easy。相邻两天只要有利润就买卖一次。
7. 题目描述：flowerbed 数组中 1 表示已经种下了花朵。花朵之间至少需要一个单位的间隔，求解是否能种下 n 朵花。
考虑数组两端的情况就行
8. 判断是否为子序列
easy
9. 修改一个数成为非递减数组：判断一个数组是否能只修改一个数就成为非递减数组
思路：遍历数组，遍历到i的时候，比较i+1和i-1的大小，根据情况决定是修改i还是i+1的值。
10. 子数组最大的和
动态规划很easy想到
11. 分隔字符串使同种字符出现在一起
此题需要改变循环条件里面的右边界。（看一眼自己的代码）








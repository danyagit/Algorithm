package com.xjf.algorithm.JianZhiOffer;

import java.util.ArrayList;

//和为S的连续正数序列：双指针
//小明很喜欢数学,有一天他在做数学作业时,
//要求计算出9~16的和,他马上就写出了正确答案是100。
//但是他并不满足于此,他在想究竟有多少种
//连续的正数序列的和为100(至少包括两个数)。
//没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。
//现在把问题交给你,
//你能不能也很快的找出所有和为S的连续正数序列? 
//输出所有和为S的连续正数序列。序列内按照从小至大的顺序，
//序列间按照开始数字从小到大的顺序
public class Test57_2 {

	public static void main(String[] args) {

	}

	public ArrayList<ArrayList<Integer>> FindContinuousSequence(int sum) {
		ArrayList<ArrayList<Integer>> lists = new ArrayList<ArrayList<Integer>>();

		if (sum < 1)
			return lists;

		int left = 1, right = 2;
		while (left <= sum / 2) {//肯定在一一半以内
			int cur = (left + right) * (right - left + 1) / 2;//等差数列求和公式
			if (cur == sum) {
				ArrayList<Integer> list = new ArrayList<Integer>();
				for (int i = left; i <= right; i++) {
					list.add(i);
				}
				lists.add(list);
				left++;
			} else if (cur > sum) {
				left++;
			} else {
				right++;
			}
		}
		return lists;
	}

}

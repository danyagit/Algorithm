1.newcoder 52
2.newcoder 24
3.newcoder 25
4. 从有序链表中删除重复节点
与newcoder里面18.2不同的是，此题能保留重复节点中的一个。不需要用到while循环
发现在递归函数的参数中增加一个节点（next）变得好理解了
5. 删除链表的倒数第 n 个节点
与newcoder22题差不多，快慢指针法
6. 交换链表中的相邻结点
发现在递归函数的参数中增加一个节点（next）变得好理解了
7. 链表求和，题目要求：不能修改原始链表。
//输入：(7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)
//输出：7 -> 8 -> 0 -> 7
算法：用栈去存储节点,用pop完成反向输出。
像这种需要从链表尾部开始操作的都可以使用栈来存储节点
8. 回文链表
方法一：不考虑空间复杂度：用栈存储链表，然后用链表的头和栈的头比较。
方法二：要求空间复杂度为1：
（1）用快慢指针法找到中间节点，将链表切成两段。
（2）用递归方法反转其中一个链表，并与另一个比较
9. 分隔链表
我的做法（很快）：
（1）创建一个int数组，数组的元素代表了所求数组中，每个链表的长度。
（2）利用刚刚的int数组，切分原链表并保存到所求数组里面。
10. 链表元素按奇偶聚集
先将所有的奇数节点连接起来，将所有的偶数节点连接起来（在while里面），
再将奇数的尾部和偶数的头部连起来即可。
